# coding: utf-8

"""
    App::Netdisco

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.050003
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_netdisco
from openapi_netdisco.models.device import Device  # noqa: E501
from openapi_netdisco.rest import ApiException

class TestDevice(unittest.TestCase):
    """Device unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Device
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_netdisco.models.device.Device()  # noqa: E501
        if include_optional :
            return Device(
                ip = '', 
                name = '', 
                dns = '', 
                location = '', 
                contact = '', 
                vendor = '', 
                os = '', 
                os_ver = '', 
                model = '', 
                serial = '', 
                chassis_id = '', 
                description = '', 
                snmp_class = '', 
                snmp_comm = '', 
                snmp_ver = 56, 
                snmp_engineid = '', 
                uptime = 56, 
                creation = '', 
                layers = '', 
                slots = '', 
                last_discover = '', 
                last_arpnip = '', 
                last_macsuck = '', 
                mac = '', 
                vtp_domain = '', 
                is_pseudo = True, 
                log = ''
            )
        else :
            return Device(
                ip = '',
        )

    def testDevice(self):
        """Test Device"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
