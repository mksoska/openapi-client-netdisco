# coding: utf-8

"""
    App::Netdisco

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.050003
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_netdisco
from openapi_netdisco.models.port import Port  # noqa: E501
from openapi_netdisco.rest import ApiException

class TestPort(unittest.TestCase):
    """Port unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Port
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_netdisco.models.port.Port()  # noqa: E501
        if include_optional :
            return Port(
                ip = '', 
                remote_ip = '', 
                port = '', 
                remote_port = '', 
                is_master = True, 
                slave_of = '', 
                name = '', 
                creation = '', 
                descr = '', 
                type = '', 
                remote_type = '', 
                duplex = '', 
                duplex_admin = '', 
                speed = '', 
                speed_admin = '', 
                mac = '', 
                remote_id = '', 
                mtu = 56, 
                vlan = '', 
                pvid = '', 
                up = '', 
                up_admin = '', 
                stp = '', 
                manual_topo = True, 
                last_change = True, 
                is_uplink = True
            )
        else :
            return Port(
                ip = '',
                port = '',
        )

    def testPort(self):
        """Test Port"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
